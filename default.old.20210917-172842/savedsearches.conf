[JOB - VELOCLOUD - INTERFACE STATS - NORMALIZE]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=gerencia description!="None" earliest=-5m@m latest=@m\
| eval description = split(description, " | "), description = if(mvcount(description) > 1, mvindex(description, 1), description)\
| table _time description linkId enterpriseId enterpriseName interface displayName isp linkIpAddress bytes* best* totalBytes\
| where bytesRx != "None"\
| eval jitter = bestJitterMsRx + bestJitterMsTx, latency = bestLatencyMsRx + bestLatencyMsTx, packet_loss_percent = bestLossPctRx + bestLossPctTx\
| rename description as host, linkId as index\
| eval metricas = "" \
\
| foreach jitter latency packet_loss_percent \
    [ eval metricas = metricas + "<<FIELD>>=" + <<FIELD>> + "##"]\
    | eval metricas = trim(split(metricas, "##")) \
| eval metricas=trim(metricas) \
| mvexpand metricas\
| eval metric = mvindex(split(metricas, "="),0),  value = mvindex(split(metricas, "="),1)\
| where isnotnull(metric)\
| table _time host metric index value\
| `CollectEventosNotaveis("VELOCLOUD HEALTH CHECK IPSLA")`

[JOB - VELOCLOUD - LINK STATUS - NORMALIZE]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=velocloud linkState=* earliest=-5m@m latest=@m \
| stats latest(linkState) as value, latest(_time) as _time by edgeSerialNumber, interface \
| eval description = "" \
| join type=left edgeSerialNumber \
    [ search index=velocloud description="2*" earliest=-10m@m latest=@m \
    | stats latest(description) as description by serialNumber \
    | rename serialNumber as edgeSerialNumber] \
| where description!= "" AND value != "null"\
| rename interface as index, description as host \
| eval metric = "linkState" \
| table _time host metric index value\
| `CollectEventosNotaveis("VELOCLOUD LINK STATUS")`

[JOB - VELOCLOUD - STATUS - NORMALIZE]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=velocloud edgeState=* description != "null" description="2*" earliest=-5m@m latest=@m\
| stats latest(edgeState) as value, latest(_time) as _time by name, id, clientname, description\
| eval metric = "status"\
\
| rename description as host, id as index\
| table _time host metric index value\
| `CollectEventosNotaveis("VELOCLOUD STATUS")`

[JOB - FORTINET HEALTH CHECK - NORMALIZE]
search = index=snmp_v2 sourcetype=health-check_json status!=error status!=down solutionId!= "" earliest=-5m@m latest=@m\
| where isnull('erro no equipamento') \
| eventstats max(_time) as ultimo by solutionId \
| where _time =ultimo \
| table _time ultimo solutionId IPSLA jitter latency packet_loss packet_loss_percent packet_received packet_sent port tx* rx* \
| eval metricas = "" \
| eval packet_loss_percent = round(packet_loss * 100 / packet_sent)\
| foreach jitter latency packet_loss packet_received packet_loss_percent packet_sent port tx* rx* \
    [ eval metricas = metricas + "<<FIELD>>=" + <<FIELD>> + "##"] \
| eval metricas = trim(split(metricas, "##")) \
| eval metricas=trim(metricas) \
| mvexpand metricas \
| where isnotnull(metricas) AND metricas != "" \
| strcat IPSLA + " - " + port + "=" + metricas metricas \
| eval metricas = split(metricas, "="), index=mvindex(metricas, 0), metric = mvindex(metricas, 1), value=mvindex(metricas,2) \
| rename solutionId as host\
| table _time host metric index value\
| `CollectEventosNotaveis("FORTINET HEALTH CHECK IPSLA")`
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
description = Corrigido 11/06
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search

[JOB - ABERTURA ALERTA NO ALERT MANAGER INTERFACES - FORTINET]
search = index=eventosnotaveis Origem="FORTINET SYSTEM INTERFACE BANDWIDTH" earliest=-1h@m latest=@m metric = "link"\
| rename orig_host as host\
| stats latest(value) as value latest(_time) as _time by host metric orig_index \
| lookup bdi_siebel.csv SOLUCAO_ID as host INTERFACE as orig_index output FUNCAO_INTERFACE\
| where isnotnull(FUNCAO_INTERFACE) \
| eval aux = orig_index . "|" . FUNCAO_INTERFACE . "|" . value \
| stats values(orig_index) as orig_index values(aux) as aux list(eval(value="True")) as qtdeLinksUP latest(_time) as _time by host \
| fillnull qtdeLinks value=0\
| eval qtdeLinks = mvcount(aux)\
| where qtdeLinksUP < qtdeLinks\
| mvexpand aux \
| eval link = mvindex(split(aux, "|"),0), funcao = mvindex(split(aux, "|"),1), status = mvindex(split(aux, "|"),2)\
| where status != "True"\
| eval texto = case(qtdeLinks = 1, "Equipamento com apenas 1 link com status down na interface " . link, qtdeLinks > 1, "Link " . funcao . " com status down na interface " . link,   true(), "NAO IMPLEMENTADO")\
| lookup Equipamentos Solucao as host output Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| eval thresholdSeverityCode = case(qtdeLinks = 1, 3, qtdeLinks > 1,  2,   true(), 2)\
| eval metric = "link", index=link, value = "down", templateName = "Template FORTINET INTERFACES",  thresholdType = "=", thresholdValue = "False", message = texto, host = Description\
| eval impact = case(thresholdSeverityCode = 4, "performance" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval priority = case(thresholdSeverityCode = 4, "informational" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval urgency = case(thresholdSeverityCode = 4, "low" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval severity = impact, dataAbertura = _time\
| table _time dataAbertura host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId\
| where host != ""
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = $result.host$ - $result.message$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than

[JOB - ABERTURA ALERTA NO ALERT MANAGER INTERFACES - MPLS]
search = index=snmp_if mib=IF-MIB oid!="ifStackStatus*" oid!="ifStackLastChange*" oid!="ifTableLastChange*" earliest=-6m@m latest=@m \
| table _time host oid snmp_index value \
| eval {oid} = value, Description = host\
| fields - oid value \
| bin span=5m _time \
| stats values(*) as * by _time host Description snmp_index  \
| where isnotnull(ifAdminStatus) AND isnotnull(ifOperStatus) \
| dedup host snmp_index \
| table _time host Description snmp_index ifAlias ifName ifDescr ifType ifSpeed ifAdminStatus ifOperStatus FUNCAO_INTERFACE \
| eval ifDescr = replace(ifDescr, ":", ".")\
| lookup bdi_siebel host INTERFACE as ifDescr output FUNCAO_INTERFACE SOLUCAO_ID\
| where isnotnull(FUNCAO_INTERFACE) AND (FUNCAO_INTERFACE = "Titular" OR FUNCAO_INTERFACE = "Backup")\
| eval value = if(ifOperStatus = "'up'", "True", "False")\
| eval aux = ifDescr . "|" . FUNCAO_INTERFACE . "|" . value\
| eval host = SOLUCAO_ID\
| stats values(orig_index) as orig_index values(aux) as aux dc(aux) as qtdeLinks count(eval(value = "True")) as qtdeLinksUP latest(_time) as _time by host Description\
| fillnull qtdeLinksUP value=0\
| mvexpand aux\
| eval link = mvindex(split(aux, "|"),0), funcao = mvindex(split(aux, "|"),1), status = mvindex(split(aux, "|"),2)\
| where status != "True"\
| eval texto = case(qtdeLinks = 1, "Equipamento com apenas 1 link com status down na interface " . link, qtdeLinks > 1, "Link " . funcao . " com status down na interface " . link,   true(), "NAO IMPLEMENTADO")\
| lookup siebel SOLUCAO AS host  output ESTADO CIDADE CLIENTE_ID CLIENTE TIPO_NEGOCIO TIPO_SERVICO SERVICO SOLUCAO PRIME_ID\
| eval thresholdSeverityCode = case(qtdeLinks = 1, 3, qtdeLinks > 1,  2,   true(), 2)\
| eval metric = "link", index=link, value = "down", templateName = "Template FORTINET INTERFACES",  thresholdType = "=", thresholdValue = "False", message = texto, host = Description\
| eval impact = case(thresholdSeverityCode = 4, "performance" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval priority = case(thresholdSeverityCode = 4, "informational" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval urgency = case(thresholdSeverityCode = 4, "low" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval severity = impact, dataAbertura = _time\
| rename ESTADO as Estado CIDADE as Cidade CLIENTE_ID as ClienteId CLIENTE as Cliente TIPO_NEGOCIO as TipoNegocio TIPO_SERVICO as TipoServico SERVICO as Servico SOLUCAO AS Solucao PRIME_ID as PrimeId\
| table _time dataAbertura host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = $result.host$ - $result.message$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than

[JOB - ABERTURA ALERTA NO ALERT MANAGER TESTE]
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = $result.host$ - $result.message$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = * * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | makeresults count=2\
| eval _time =1627488030\
| fields _time host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId alert_time\
| foreach host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId \
    [| eval <<FIELD>> = "TESTE"]\
    | streamstats count\
    | eval host = host . count\
    | eval dataAbertura = _time

[JOB - FORTINET RESOURCE USAGE - NORMALIZE]
search = index=snmp_v2 sourcetype=resourceUsage_json earliest=-5m@m latest=@m\
| rename solutionId as host\
| table _time host results.*.current\
| rename results.*{}.current as metric_*\
| eval metricas = ""\
| foreach metric_* [| eval metricas = metricas +"<<FIELD>>=" + <<FIELD>> + "##"]\
| eval metricas = split(metricas, "##")\
| mvexpand metricas\
|fields _time host metricas\
| where isnotnull(metricas) AND metricas != ""\
| eval metricas = split(metricas, "="), index="", metric = replace(mvindex(metricas, 0), "metric_", ""), value=mvindex(metricas,1)\
| table _time host metric index value\
| `CollectEventosNotaveis("FORTINET RESOURCE USAGE")`
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
description = Corrigido 11/06
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search

[JOB - FORTINET SYSTEM INTERFACE - NORMALIZE]
search = index=snmp_v2 sourcetype=systemInterface_json earliest=-12m@m latest=@m NOT("erro no equipamento") solutionId != ""\
| dedup _time solutionId id\
| table _time solutionId alias duplex id ip link mac name rx* speed tx*\
| stats  min(rx_bytes) as min_rx_bytes max(rx_bytes) as max_rx_bytes \
         min(tx_bytes) as min_tx_bytes max(tx_bytes) as max_tx_bytes\
         min(tx_packets) as min_tx_packets max(tx_packets) as max_tx_packets\
         min(rx_packets) as min_rx_packets max(rx_packets) as max_rx_packets\
         min(tx_errors) as min_tx_errors max(tx_errors) as max_tx_errors\
         latest(_time) as _time\
         latest(alias) as alias\
         latest(duplex) as duplex\
         latest(ip) as ip\
         latest(link) as link\
         latest(mac) as mac\
         latest(speed) as speed\
by solutionId id name\
| eval rx_bytes=round(max_rx_bytes-min_rx_bytes),\
       tx_bytes=round(max_tx_bytes-min_tx_bytes),\
       rx_packets=round(max_rx_packets-min_rx_packets),\
       tx_packets=round(max_tx_packets-min_tx_packets),\
       tx_errors=round(max_tx_errors-min_tx_errors),\
       bandwidth_bytes_1m = round(tx_bytes + rx_bytes / 5),\
       bandwidth_mb_1m =  round((bandwidth_bytes_1m / 1024 / 1024)),\
       bandwidth_perc_1m = round((bandwidth_bytes_1m / 1024 / 1024) / speed * 100)\
       \
| eval metricas = ""\
| foreach rx* tx* name link alias ip mac speed bandwidth_* [| eval metricas = metricas + id +"=<<FIELD>>=" + <<FIELD>> + "##"]\
| eval metricas = split(metricas, "##")\
| mvexpand metricas\
| fields - id alias name ip mac mask speed rx* tx*\
| where isnotnull(metricas) AND metricas != ""\
| eval metricas = split(metricas, "="), index=mvindex(metricas, 0), metric = mvindex(metricas, 1), value=mvindex(metricas,2)\
| rename solutionId as host\
| table _time host metric index value\
| `CollectEventosNotaveis("FORTINET SYSTEM INTERFACE BANDWIDTH")`
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
description = corrigido 11/06.
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search

[JOB - CLEAR ALERTA NO ALERT MANAGER MPLS INTERFACES]
disabled = 0
search = index=snmp_if mib=IF-MIB oid!="ifStackStatus*" oid!="ifStackLastChange*" oid!="ifTableLastChange*" earliest=-6m@m latest=@m \
| table _time host oid snmp_index value \
| eval {oid} = value, Description = host\
| fields - oid value \
| bin span=5m _time \
| stats values(*) as * by _time host Description snmp_index  \
| search NOT (ifDescr = "Serial*" OR ifDescr = "Voice*" OR ifDescr = "E1*" OR ifDescr ="EFXS*" OR ifDescr = "Embedded-Service*" OR ifDescr = "Vlan*") \
| where isnotnull(ifAdminStatus) AND isnotnull(ifOperStatus) \
| dedup host snmp_index \
| table _time host Description snmp_index ifAlias ifName ifDescr ifType ifSpeed ifAdminStatus ifOperStatus FUNCAO_INTERFACE \
| eval ifDescr = replace(ifDescr, ":", ".")\
| lookup bdi_siebel host INTERFACE as ifDescr output FUNCAO_INTERFACE SOLUCAO_ID\
| where isnotnull(FUNCAO_INTERFACE) AND (FUNCAO_INTERFACE = "Titular" OR FUNCAO_INTERFACE = "Backup")\
| eval value = if(ifOperStatus = "'up'", "True", "False")\
| eval aux = ifDescr . "|" . FUNCAO_INTERFACE . "|" . value\
| eval host = SOLUCAO_ID\
| stats values(orig_index) as orig_index values(aux) as aux dc(aux) as qtdeLinks count(eval(value = "True")) as qtdeLinksUP latest(_time) as _time by host Description\
| fillnull qtdeLinksUP value=0\
| mvexpand aux\
| eval link = mvindex(split(aux, "|"),0), funcao = mvindex(split(aux, "|"),1), status = mvindex(split(aux, "|"),2)\
| where status = "True"\
| eval texto = case(qtdeLinks = 1, "Equipamento com apenas 1 link com status down na interface " . link, qtdeLinks > 1, "Link " . funcao . " com status down na interface " . link,   true(), "NAO IMPLEMENTADO")\
| lookup siebel SOLUCAO AS host  output ESTADO CIDADE CLIENTE_ID CLIENTE TIPO_NEGOCIO TIPO_SERVICO SERVICO SOLUCAO PRIME_ID\
| eval thresholdSeverityCode = case(qtdeLinks = 1, 3, qtdeLinks > 1,  2,   true(), 2)\
| eval metric = "link", index=link, templateName = "Template FORTINET INTERFACES",  host = Description\
| table host metric index\
| join type=inner host metric index [| inputlookup incidents \
| where (status = "new" OR status="assigned") AND host!= "N/A" AND metric != "N/A"| eval chave = _key | table incident_id host metric index value title status chave]\
| lookup incidents incident_id\
| eval status = "closed", _key = chave, alert_close_time = _time\
| outputlookup incidents append=true
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = alert_manager
request.ui_dispatch_view = search

[JOB - CLEAR ALERTA NO ALERT MANAGER]
search = index=eventosnotaveis earliest=-8m@m latest=@m \
| rename orig_host as host orig_index as index \
| eval Solucao = host \
| eval templateName = "Template FORTINET" \
| table _time host metric index value templateName Solucao \
| stats latest(value) as value latest(_time) as _time by templateName host metric index Solucao \
| join max=0 type=inner templateName metric \
    [| inputlookup TemplateAlarme \
    | eval metric = thresholdMetric] \
| eval thresholdIndex = if(thresholdIndex = "*", index, thresholdIndex) \
| where thresholdIndex = index \
| eval Trigger=case(thresholdType="=" AND value=thresholdValue, "TRUE", thresholdType=">" AND value>thresholdValue, "TRUE", thresholdType=">=" AND value>=thresholdValue, "TRUE", thresholdType="<" AND value<thresholdValue, "TRUE", thresholdType="<=" AND value<=thresholdValue, "TRUE",thresholdType="!=" AND value!=thresholdValue, "TRUE",thresholdType="<>" AND value!=thresholdValue, "TRUE", 1=1, "FALSE") \
| where Trigger = "FALSE" \
| fillnull value="" \
| join type=inner Solucao metric index \
    [| inputlookup incidents \
    | where (status = "new" OR status="assigned") AND Solucao!= "N/A" AND metric != "N/A" \
    | eval chave = _key \
    | table incident_id host metric index value title status chave Solucao]\
| lookup incidents incident_id\
| eval status = "closed", _key = chave, alert_close_time = _time\
| outputlookup incidents append=true
disabled = 0
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = * * * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = alert_manager
request.ui_dispatch_view = search

[JOB - ABERTURA ALERTA NO ALERT MANAGER_BACKUP]
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = $result.host$ - $result.message$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
disabled = 1
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=eventosnotaveis earliest=-15m@m latest=@m Origem="*" orig_host=*\
| rename orig_host as host orig_index as index \
| eval templateName = "Template FORTINET" \
| table _time host metric index value templateName\
| dedup _time host metric index value templateName\
\
| lookup Equipamentos Solucao as host output Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| where isnotnull(Solucao)\
| join max=0 type=inner templateName metric \
    [| inputlookup TemplateAlarme \
    | eval metric = thresholdMetric]\
    | eval thresholdIndex = if(thresholdIndex = "*", index, thresholdIndex)\
    | where thresholdIndex = index\
    | eval Trigger=case(thresholdType="=" AND value=thresholdValue, "TRUE", thresholdType=">" AND value>thresholdValue, "TRUE", thresholdType=">=" AND value>=thresholdValue, "TRUE", thresholdType="<" AND value<thresholdValue, "TRUE", thresholdType="<=" AND value<=thresholdValue, "TRUE",thresholdType="!=" AND value!=thresholdValue, "TRUE",thresholdType="<>" AND value!=thresholdValue, "TRUE", 1=1, "FALSE") \
| eval duration = tonumber(trim(thresholdDuration)) + 1 \
| eval data_duration = relative_time(now(), "-" + duration + "m@m")\
| fillnull value=""\
| dedup metric index host value _time Trigger data_duration duration templateName thresholdDuration thresholdMessage thresholdSeverityCode thresholdType thresholdValue Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| stats count(eval(_time >=data_duration)) as Total count(eval(Trigger="TRUE" AND _time >= data_duration )) as TotalAlarmado earliest(value) as value earliest(_time) as _time earliest(thresholdDuration) as duration by host metric index templateName thresholdSeverityCode thresholdType thresholdValue thresholdMessage Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| where (TotalAlarmado = Total AND Total !=0) \
| fillnull value="" \
| sort 0 - thresholdSeverityCode \
| stats first(_time) as _time first(value) as value first(templateName) as templateName first(thresholdSeverityCode) as thresholdSeverityCode first(thresholdType) as thresholdType first(thresholdValue) as thresholdValue first(thresholdMessage) as thresholdMessage first(duration) as duration by host metric index Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| eval impact = case(thresholdSeverityCode = 4, "performance" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval priority = case(thresholdSeverityCode = 4, "informational" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval urgency = case(thresholdSeverityCode = 4, "low" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval severity = impact\
| eval message = thresholdMessage\
| eval thresholdIndex = index\
| `FormatarMensagemAlertManager(message)`\
| eval message = message, dataAbertura = _time\
| rename Location as Localidade, Description as host\
| fields _time dataAbertura host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId\
| where isnotnull(Solucao)\
| eval host = if(host == "", Solucao, host)

[JOB - ABERTURA ALERTA NO ALERT MANAGER]
search = index=eventosnotaveis earliest=-15m@m latest=@m Origem="*" orig_host=*\
| rename orig_host as host orig_index as index \
| eval templateName = "Template FORTINET" \
| table _time host metric index value templateName\
| dedup _time host metric index value templateName\
\
| lookup Equipamentos Solucao as host output Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| where isnotnull(Solucao)\
| join max=0 type=inner templateName metric \
    [| inputlookup TemplateAlarme \
    | eval metric = thresholdMetric]\
    | eval thresholdIndex = if(thresholdIndex = "*", index, thresholdIndex)\
    | where thresholdIndex = index\
    | eval Trigger=case(thresholdType="=" AND value=thresholdValue, "TRUE", thresholdType=">" AND value>thresholdValue, "TRUE", thresholdType=">=" AND value>=thresholdValue, "TRUE", thresholdType="<" AND value<thresholdValue, "TRUE", thresholdType="<=" AND value<=thresholdValue, "TRUE",thresholdType="!=" AND value!=thresholdValue, "TRUE",thresholdType="<>" AND value!=thresholdValue, "TRUE", 1=1, "FALSE") \
| eval duration = tonumber(trim(thresholdDuration)) + 1 \
| eval data_duration = relative_time(now(), "-" + duration + "m@m")\
| fillnull value=""\
| dedup metric index host value _time Trigger data_duration duration templateName thresholdDuration thresholdMessage thresholdSeverityCode thresholdType thresholdValue Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| stats count(eval(_time >=data_duration)) as Total count(eval(Trigger="TRUE" AND _time >= data_duration )) as TotalAlarmado earliest(value) as value earliest(_time) as _time earliest(thresholdDuration) as duration by host metric index templateName thresholdSeverityCode thresholdType thresholdValue thresholdMessage Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| where (TotalAlarmado = Total AND Total !=0) \
| fillnull value="" \
| sort 0 - thresholdSeverityCode \
| stats first(_time) as _time first(value) as value first(templateName) as templateName first(thresholdSeverityCode) as thresholdSeverityCode first(thresholdType) as thresholdType first(thresholdValue) as thresholdValue first(thresholdMessage) as thresholdMessage first(duration) as duration by host metric index Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Location PrimeId Description\
| eval impact = case(thresholdSeverityCode = 4, "performance" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval priority = case(thresholdSeverityCode = 4, "informational" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval urgency = case(thresholdSeverityCode = 4, "low" , thresholdSeverityCode = 3, "high" , thresholdSeverityCode = 2, "medium", thresholdSeverityCode = 1, "low", true(), "N/A")\
| eval severity = impact\
| eval message = thresholdMessage\
| eval thresholdIndex = index\
| `FormatarMensagemAlertManager(message)`\
| eval message = message, dataAbertura = _time\
| rename Location as Localidade, Description as host\
| fields _time dataAbertura host metric index value templateName thresholdSeverityCode thresholdType thresholdValue message metric severity impact urgency duration Estado Cidade ClienteId Cliente TipoNegocio TipoServico Servico Solucao Localidade PrimeId\
| where isnotnull(Solucao)\
| eval host = if(host == "", Solucao, host)
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = $result.host$ - $result.message$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than

[JOB - MPLS INTERFACES - NORMALIZE]
search = index=snmp_if mib=IF-MIB oid!="ifStackStatus*" oid!="ifStackLastChange*"  oid!="ifTableLastChange*" earliest=-20m@m latest=@m\
| table _time host oid snmp_index value \
| eval {oid} = value \
| fields - oid value \
| bin span=5m _time \
| stats values(*) as * by _time host snmp_index \
| where isnotnull(ifAdminStatus) AND ifAdminStatus = "'up'" \
| sort 0 host snmp_index _time\
| where  (isnotnull(ifHighSpeed) AND isnotnull(ifHCInOctets) AND isnotnull(ifHCOutOctets)) OR (isnotnull(ifSpeed) AND isnotnull(ifInOctets) AND isnotnull(ifOutOctets))\
| bandwidth\
| lookup bdi_siebel.csv host INTERFACE as ifDescr output SOLUCAO_ID FUNCAO_INTERFACE \
| where isnotnull(SOLUCAO_ID)\
| eval description = host, host = SOLUCAO_ID, BandwidthInUsagePerc=round(BandwidthInUsagePerc,3), BandwidthOutUsagePerc=round(BandwidthOutUsagePerc,3)\
| sort 0 - host snmp_index _time\
| eval IN_BPS = ifnull(HC_IN_BPS, IN_BPS), OUT_BPS = ifnull(HC_OUT_BPS, OUT_BPS), IN_KBPS = IN_BPS / 1000, OUT_KBPS=IN_BPS/1000, IN_MBPS = IN_BPS/1000/1000, OUT_MBPS = OUT_BPS /1000/1000\
| fields - HC_IN_BPS HC_OUT_BPS HC_IN_PERC HC_OUT_PERC\
| dedup host snmp_index\
| eval metric = ""\
| foreach * [eval metric=metric + "|||<<FIELD>>=" + ifnull(<<FIELD>>, "")]\
| fields host snmp_index _time metric ifDescr FUNCAO_INTERFACE description\
| eval metric = split(metric, "|||")\
| mvexpand metric\
| eval value = mvindex(split(metric, "="), -1), metric=mvindex(split(metric, "="), 0)\
| where ( metric IN("BandwidthInUsagePerc", "BandwidthOutUsagePerc", "OUT_ERRORS", "IN_ERRORS", "OUT_DISCARDS", "IN_DISCARDS", "ifOperStatus"))\
| rename ifDescr as index\
| dedup host metric index\
| fields _time host metric index value origem FUNCAO_INTERFACE description\
| where value!=""\
| `CollectEventosNotaveis("MPLS INTERFACES")`
disabled = 0
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search

[JOB - UPDATE EQUIPAMENTOS]
description = FAVOR APAGAR
disabled = 1
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 */6 * * *
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","linkState"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = alert_manager
request.ui_dispatch_view = search
search = index=snmp_v2 sourcetype=sysInfo_json serial=* \
| stats latest(results.location) as Location latest(results.description) as Description by  serial\
| rename serial as SerialName \
| eval _key=SerialName\
| eval Solucao=trim(mvindex(split(Location, " | "),-1))\
| lookup siebel.csv SOLUCAO as Solucao OUTPUT CIDADE as Cidade \
                    CLIENTE_ID as ClienteId \
                    CLIENTE as Cliente\
                    CODIGO_PRIMESYS as CodigoPrimesys\
                    OPERADORA as Operadora\
                    PRIME_ID as PrimeId\
                    SERVICO as Servico\
                    TIPO_NEGOCIO as TipoNegocio\
                    TIPO_SERVICO as TipoServico\
                    ESTADO as Estado\
                    DATA_ATIVACAO as DataAtivacao\
| outputlookup append=true Equipamentos

[JOB - FORTINET SYSINFO HA - NORMALIZE]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
description = corrigido 12/06
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=snmp_v2 sourcetype=sysInfo_json earliest=-5m@m latest=@m  (solutionId=* AND solutionId!="") \
| eventstats latest(_time) as ultimo by solutionId \
| where _time = ultimo \
| rename results.status as Status \
| eval Status = if(isnotnull('erro no equipamento'), "erro de coleta", Status)\
| table _time serial Status solutionId\
| join serial type=left \
    [ search index=snmp_v2 sourcetype=api_fortinet_ha earliest=-5m@m latest=@m (solutionId=* AND solutionId!="") \
    | eventstats latest(_time) as ultimo by solutionId \
    | where _time = ultimo \
    | eval COMPONENTES=if(isnull('results{}.serial_no'), serial, 'results{}.serial_no') \
    | eval COMPONENTES = mvjoin(COMPONENTES, "|") \
    | table serial Mode COMPONENTES] \
| eval COMPONENTES = split(COMPONENTES, "|") \
| eval metric = "HA-STATUS", index=if(mvcount(COMPONENTES) > 1, "HA", "StandAlone") \
| table _time solutionId COMPONENTES metric index Status \
| streamstats count\
| mvexpand COMPONENTES \
| streamstats count as contadorFilho by solutionId\
| eval index = case (index="HA" AND contadorFilho = 1, "Primário", index="HA" AND contadorFilho > 1, "Secundário", true(), index)\
| table _time solutionId metric index Status\
| rename solutionId as host, Status as value\
| `CollectEventosNotaveis("FORTINET SYSINFO HA")`

[JOB - FORTINET SYSTEM STATUS - NORMALIZE]
action.email.show_password = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 1,6,11,16,21,26,31,36,41,46,51,56 * * * *
description = corrigido 11/06
dispatch.earliest_time = -5m@m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=snmp_v2 sourcetype=sysInfo_json earliest=-5m@m latest=@m\
| eventstats latest(_time) as ultimo by solutionId\
| where _time = ultimo\
| table _time solutionId host results.status \
| rename results.status as value\
| fillnull value value="offline"\
| where isnotnull(solutionId) AND solutionId != ""\
| eval metric = "status", index=""\
| rename solutionId as host\
| table _time host metric index value\
| `CollectEventosNotaveis("FORTINET SYSTEM STATUS")`

[1 CPE (Router ou edge) DOWN for edge $result.id$]
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = CPE DOWN for edge $result.id$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = DESABILITADO, PREVISTO REVISAO
disabled = 1
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=velocloud edgeState=OFFLINE | dedup id\
| stats last(edgeState) by name, id, clientname, description\
| lookup siebel.csv SOLUCAO as description\
| eval DataCriacao=strftime(now(),"%m/%d/%Y %H:%M:%S")\
| eval epochtime=strftime(now(),"%s")\
| eval IdentificacaoTTCliente="SPLUNK-".description.epochtime\
| eval FlagProAtivo="Y"\
| eval Operacao="Inserir"\
| eval Origem="Splunk"\
| eval ServicoAfetado=SERVICO\
| eval Sintoma="Lentidao"\
| eval SolutionId=description\
| eval ClienteControle=CODIGO_PRIMESYS\
| eval UsuarioFinal="O edge esta indisponivel"\
| eval Descricao=UsuarioFinal." solutionId ".SolutionId\
| table id, clientname, last(edgeState), IdentificacaoTTCliente, DataCriacao, FlagProAtivo, Operacao, Origem, ServicoAfetado, Sintoma, SolutionId, ClienteControle, UsuarioFinal, Descricao

[1 Link down for linkId $result.linkId$]
action.alert_manager = 1
action.alert_manager.param.append_incident = 1
action.alert_manager.param.auto_previous_resolve = 0
action.alert_manager.param.auto_subsequent_resolve = 0
action.alert_manager.param.auto_suppress_resolve = 0
action.alert_manager.param.auto_ttl_resove = 0
action.alert_manager.param.impact = high
action.alert_manager.param.title = Link down for linkId $result.linkId$
action.alert_manager.param.urgency = high
action.email.show_password = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = DESABILITADO, REVISAO
disabled = 1
dispatch.earliest_time = -15m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=velocloud linkState=DISCONNECTED\
| stats last(linkState) by linkId, interface, enterpriseName, linkIpAddress, linkLastActive\
| lookup siebel.csv SOLUCAO as description\
| eval DataCriacao=strftime(now(),"%m/%d/%Y %H:%M:%S")\
| eval epochtime=strftime(now(),"%s")\
| eval IdentificacaoTTCliente="SPLUNK-".description.epochtime\
| eval FlagProAtivo="Y"\
| eval Operacao="Inserir"\
| eval Origem="Splunk"\
| eval ServicoAfetado=SERVICO\
| eval Sintoma="Lentidao"\
| eval SolutionId=description\
| eval ClienteControle=CODIGO_PRIMESYS\
| eval UsuarioFinal="O link esta indisponivel"\
| eval Descricao=UsuarioFinal." Interface ".interface." IP ".linkIpAddress\
| table last(linkState), linkId, interface, enterpriseName, linkIpAddress, linkLastActive, IdentificacaoTTCliente, DataCriacao, FlagProAtivo, Operacao, Origem, ServicoAfetado, Sintoma, SolutionId, ClienteControle, UsuarioFinal, Descricao

