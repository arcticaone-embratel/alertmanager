[all_alerts]
definition = (`alert_manager_index`) sourcetype="alert_metadata" \
| fields _time, incident_id, alert, app, category, subcategory, tags, earliest, latest, eventSearch, owner, priority, result_id, title, urgency, alert_time, display_fields \
| lookup incidents incident_id OUTPUT alert, title, owner, status, impact, urgency, external_reference_id, duplicate_count, alert_time as earliest_alert_time, group_id, category, subcategory, tags, display_fields, Solucao, TipoServico, Cliente, Estado, Cidade, TipoNegocio, Localidade, host, AbertoTT, alert_close_time\
| lookup incident_groups _key AS group_id OUTPUT group \
| lookup alert_priority impact, urgency OUTPUT priority \
| lookup incident_settings alert OUTPUTNEW category AS category_settings, subcategory as subcategory_setttings, tags as tags_settings, display_fields as display_fields_settings \
| lookup alert_status status OUTPUT status_description \
| dedup incident_id \
| eval _time = earliest_alert_time\
| eval first_seen=strftime(earliest_alert_time, "%Y-%m-%d %H:%M:%S"), title=if(isnull(title) OR title="",alert,title), category=if(category="" OR isnull(category),category_settings,category),subcategory=if(subcategory="" OR isnull(subcategory),subcategory_settings,subcategory),tags=if(tags="",tags_settings,tags),display_fields=if(display_fields="",display_fields_settings,display_fields) \
\
| fillnull value="" tags, category, subcategory \
| eval tags=if(tags=="","[Untagged]",tags) \
| makemv delim=" " tags

[incident_details(1)]
definition = loadincidentresults incident_id="$incident_id$"\
| eval incident_id = "$incident_id$"\
| lookup incidents incident_id as incident_id output siebel numero_tt_siebel falha_datacheck\
| eval siebel = if(isnull(siebel), "NULL",siebel),\
       numero_tt_siebel = if(isnull(numero_tt_siebel), "NULL",numero_tt_siebel),\
       falha_datacheck = if(isnull(falha_datacheck), "NULL",falha_datacheck)\
| transpose 0\
| rename column AS Key, "row 1" AS Value, "row 2" AS "Value 2", "row 3" AS "Value 3", "row 4" AS "Value 4", "row 5" AS "Value 5"\
| where Key != "_time"

[incident_history(1)]
definition = `incident_changes($incident_id$)` \
| eval previous_group=if(isnotnull(group_id) AND isnull(previous_group),"ungrouped", previous_group) \
| eval previous_value=coalesce(previous_status, previous_owner, previous_urgency, previous_group) \
| eval attribute=case(isnotnull(owner),"owner",isnotnull(urgency),"urgency",isnotnull(status),"status",isnotnull(group),"group") \
| eval attribute_val=case(isnotnull(owner),owner,isnotnull(urgency),urgency,isnotnull(status),status,isnotnull(group),group) \
| eval suppression_rules=if(isnotnull(suppression_rule),mvjoin(suppression_rule,", "),"") \
| eval details=case(action="auto_previous_resolve","Incident resolved by system (because of a new incident)",action="auto_ttl_resolve","Incident resolved by system (TTL reached)",action="create","Incident created",action="change",attribute + " has been changed from '" + previous_value + "' to '" + attribute_val+"'", action="suppress", "Incident suppressed by rules: " + suppression_rule, action="auto_suppress_resolve", "Incident auto-suppressed by rules: " + suppression_rule, action="comment", "Comment added", action="new_subsequent_incident", "New identical incident with incident_id='"+ new_incident_id +"' has been created and automatically resolved.", action="auto_subsequent_resolve", "Incident resolved by system (because of a identical pre-existing incident)") \
| lookup alert_status status OUTPUT status_description \
| table _time, action, user, owner, status_description, details, comment\
| where comment != "Appending duplicate alert"
iseval = 0

[GetIncident(1)]
args = incident_id
definition = inputlookup incidents | where incident_id = "$incident_id$"\
| lookup siebel.csv SOLUCAO as Solucao output CODIGO_PRIMESYS\
| eval _time = alert_time,  data = strftime(_time, "%m/%d/%Y %H:%M:%S")\
| eval username = "" , realname = "", email = "" \
| append \
    [| rest /services/authentication/current-context \
    | table username realname email \
    | where username != "splunk-system-user"| head 1] \
| stats values(*) as *
iseval = 0

[TotIncsOpenByCli]
definition = inputlookup incidents where status IN ("new", "assigned")\
| regex ClienteId = "[\d.]+"\
| eval category = case(metric IN ("link", "linkState", "status"), "DN",\
                       metric IN ("HA-STATUS", "IN_ERRORS"), "ERR",\
                       metric IN ("latency"), "LAT",\
                       metric IN ("packet_loss_percent"), "PAC",\
                       true(), "INT"),\
                       info = category."{###}".incident_id\
 \
| fields ClienteId Solucao info\
\
| append [\
    | inputlookup bdi_siebel.csv \
    | stats count as eqpts by CLIENTE_ID SOLUCAO_ID CODIGO_PRIMESYS\
    | rename CLIENTE_ID as ClienteId SOLUCAO_ID as Solucao CODIGO_PRIMESYS as codPrime\
]\
 \
| stats values(*) as * by ClienteId Solucao\
| fillnull value="-" info\
| mvexpand info\
| fillnull value="NÃƒO REGISTRADO" codPrime\
| fillnull value=1 eqpts\
| eval info = split(info, "{###}"),\
       category = mvindex(info, 0),\
       incident_id = coalesce(mvindex(info, 1), "-")\
| fields - info\
 \
| stats sum(eqpts) as TOT\
        count(eval(category=="DN")) as DN\
        count(eval(category=="ERR")) as ERR\
        count(eval(category=="LAT")) as LAT\
        count(eval(category=="PAC")) as PAC\
        count(eval(category=="INT")) as INT\
        by codPrime\
| sort 0 - DN ERR LAT PAC INT
iseval = 0

[all_alerts_novo]
definition = inputlookup incidents \
| table alert, title, owner, status, impact, urgency, external_reference_id, duplicate_count, alert_time, group_id, category, subcategory, tags, display_fields, Solucao, TipoServico, Cliente, Estado, Cidade, TipoNegocio, Localidade, host, AbertoTT, alert_close_time, _key, incident_id, siebel, metric, numero_tt_siebel, falha_datacheck\
\
| lookup incident_groups _key AS group_id OUTPUT group \
| lookup alert_priority impact, urgency OUTPUT priority \
| lookup incident_settings alert OUTPUTNEW category AS category_settings, subcategory as subcategory_setttings, tags as tags_settings, display_fields as display_fields_settings \
| lookup alert_status status OUTPUT status_description\
| dedup incident_id \
| eval _time = alert_time\
| eval first_seen=strftime(alert_time, "%Y-%m-%d %H:%M:%S"), title=if(isnull(title) OR title="",alert,title), category=if(category="" OR isnull(category),category_settings,category),subcategory=if(subcategory="" OR isnull(subcategory),subcategory_settings,subcategory),tags=if(tags="",tags_settings,tags),display_fields=if(display_fields="",display_fields_settings,display_fields) \
\
| fillnull value="" tags, category, subcategory \
| eval tags=if(tags=="","[Untagged]",tags) \
| makemv delim=" " tags
iseval = 0

[all_alerts_single_trend_novo]
definition = inputlookup incidents | table incident_id, alert_time, impact, urgency, status, alert_close_time,title,owner,status,impact,Cliente,Estado\
| eval _time = alert_time\
| lookup alert_priority impact, urgency OUTPUT priority
iseval = 0

[environment]
definition = "HOMO"
iseval = 0

[executeMacro(1)]
definition = `GetIncident("$incidentid$")`\
| eval incident_id = "$incidentid$"\
| abrettsiebel\
| table incident_id envelope retorno\
| collect index=integracao\
| lookup incidents incident_id \
| eval AbertoTT = "Sim"\
| outputlookup incidents append=true

[tabelaGerencialSearch]
definition = inputlookup incidents where status IN ("new", "assigned")\
| regex ClienteId = "[\d.]+"\
| eval category = case(metric IN ("link", "linkState", "status"), "DN",\
                       metric IN ("HA-STATUS", "IN_ERRORS"), "ERR",\
                       metric IN ("latency"), "LAT",\
                       metric IN ("packet_loss_percent"), "PAC",\
                       true(), "INT"),\
                       info = category."{###}".incident_id\
 \
| fields ClienteId Solucao info\
\
| append [\
    | inputlookup bdi_siebel.csv \
    | stats count as eqpts by CLIENTE_ID SOLUCAO_ID CODIGO_PRIMESYS\
    | rename CLIENTE_ID as ClienteId SOLUCAO_ID as Solucao CODIGO_PRIMESYS as codPrime\
]\
 \
| stats values(*) as * by ClienteId Solucao\
| fillnull value="-" info\
| mvexpand info\
| fillnull value="NÃƒO REGISTRADO" codPrime\
| fillnull value=1 eqpts\
| eval info = split(info, "{###}"),\
       category = mvindex(info, 0),\
       incident_id = coalesce(mvindex(info, 1), "-")\
| fields - info\
| where codPrime != "NÃƒO REGISTRADO"\
| eventstats count(eval(category == "DN")) as DNcount count as siteCount by codPrime\
| eval category = if(category == "DN", if(DNcount == siteCount, "DN", "PAR"), category)\
| stats sum(eqpts) as TOT\
        count(eval(category=="DN")) as DN\
        count(eval(category=="ERR")) as ERR\
        count(eval(category=="LAT")) as LAT\
        count(eval(category=="PAC")) as PAC\
        count(eval(category=="INT")) as INT\
        count(eval(category=="PAR")) as PAR\
        by codPrime\
| eval UP = 'TOT'-'DN', CHK_OK=0, CHK_NOK=0, TTS=0, 1D=0, 2D=0, 3D=0, 4D=0, 5D=0, >5D=0, SAG="icone", GRAF="icone", BDI="icone", BD="icone"\
| fields codPrime TOT UP DN PAR ERR INT LAT PAC CHK_OK CHK_NOK TTS 1D 2D 3D 4D 5D >5D SAG GRAF BDI BD URL NomeDrilldown\
| rename codPrime as Cliente\
| sort 0 Cliente\
| join type=left Cliente\
[\
  | inputlookup incidents where status != closed\
  | where isnotnull(siebel) and siebel != "N/A"\
  | fields siebel ClienteId Solucao\
  | spath input=siebel\
  | eval reference=strptime(Data_Abertura, "%d/%m/%Y %H:%M"), \
         category=case(reference > relative_time(now(), "-24h@m"), "1D", \
                       reference > relative_time(now(), "-48h@m"), "2D",\
                       reference > relative_time(now(), "-72h@m"), "3D",\
                       reference > relative_time(now(), "-96h@m"), "4D",\
                       reference > relative_time(now(), "-120h@m"), "5D",\
                       true(), ">5D"),\
        ident=ClienteId."{|_|}".Solucao."{|_|}".if(Responsavel="", "false", "true")\
  | chart count over ident by category\
  \
  | fillnull value=0 1D 2D 3D 4D 5D ">5D" TTS\
  | eval ident=split(ident,"{|_|}"),\
       ClienteId=mvindex(ident,0),\
       Solucao=mvindex(ident,1),\
       Assigned=mvindex(ident,2)\
       | lookup bdi_siebel.csv CLIENTE_ID as ClienteId output CODIGO_PRIMESYS as Cliente\
       | eval Cliente=mvdedup(Cliente)\
      \
| stats sum(*D) as *D \
count(eval(Assigned="true")) as CHK_OK\
count(eval(Assigned="false")) as CHK_NOK\
by Cliente\
]\
| eval TTS = '1D'+'2D'+'3D'+'4D'+'5D'+'>5D'\
| join type=left Cliente\
[\
  | inputlookup painel_gerencial_GRAF.csv\
]
iseval = 0

[tabelaGerencialSearch_bkp]
definition = inputlookup mockSmartPerformAlertGerencial.csv\
\
| append [\
     | inputlookup mockDetalhesGerencial.csv\
]\
\
| append [\
     | inputlookup mockTTsGerencial.csv \
]\
\
| stats values(*) as * by Cliente\
\
| table Cliente TOT UP DN PAR ERR LAT PAC INT CHKO CHKN TTs 1D 2D 3D 4D 5D ">5D" SAG GRAF BDI BD
iseval = 0

[tableSearchMacro]
definition = inputlookup mockTTsGerencial.csv
iseval = 0

[all_alerts_novo(3)]
args = earliest,latest,filters
definition = index="alert_manager" earliest=$earliest$ latest=$latest$ $filters$\
\
| append[\
    | inputlookup incidents \
]\
\
| table alert, title, owner, status, impact, urgency, external_reference_id, duplicate_count, alert_time, group_id, category, subcategory, tags, display_fields, Solucao, TipoServico, Cliente, Estado, Cidade, TipoNegocio, Localidade, host, AbertoTT, alert_close_time, _key, incident_id, siebel, metric, numero_tt_siebel, falha_datacheck\
\
| lookup incident_groups _key AS group_id OUTPUT group \
| lookup alert_priority impact, urgency OUTPUT priority \
| lookup incident_settings alert OUTPUTNEW category AS category_settings, subcategory as subcategory_setttings, tags as tags_settings, display_fields as display_fields_settings \
| lookup alert_status status OUTPUT status_description\
| dedup incident_id \
| eval _time = alert_time\
| eval first_seen=strftime(alert_time, "%Y-%m-%d %H:%M:%S"), title=if(isnull(title) OR title="",alert,title), category=if(category="" OR isnull(category),category_settings,category),subcategory=if(subcategory="" OR isnull(subcategory),subcategory_settings,subcategory),tags=if(tags="",tags_settings,tags),display_fields=if(display_fields="",display_fields_settings,display_fields) \
\
| fillnull value="" tags, category, subcategory \
| eval tags=if(tags=="","[Untagged]",tags) \
| makemv delim=" " tags
iseval = 0

[all_alerts_novo(1)]
args = filters
definition = index="alert_manager" $filters$\
\
| append[\
    | inputlookup incidents \
]\
\
| table alert, title, owner, status, impact, urgency, external_reference_id, duplicate_count, alert_time, group_id, category, subcategory, tags, display_fields, Solucao, TipoServico, Cliente, Estado, Cidade, TipoNegocio, Localidade, host, AbertoTT, alert_close_time, _key, incident_id, siebel, metric, numero_tt_siebel, falha_datacheck\
\
| lookup incident_groups _key AS group_id OUTPUT group \
| lookup alert_priority impact, urgency OUTPUT priority \
| lookup incident_settings alert OUTPUTNEW category AS category_settings, subcategory as subcategory_setttings, tags as tags_settings, display_fields as display_fields_settings \
| lookup alert_status status OUTPUT status_description\
| dedup incident_id \
| eval _time = alert_time\
| eval first_seen=strftime(alert_time, "%Y-%m-%d %H:%M:%S"), title=if(isnull(title) OR title="",alert,title), category=if(category="" OR isnull(category),category_settings,category),subcategory=if(subcategory="" OR isnull(subcategory),subcategory_settings,subcategory),tags=if(tags="",tags_settings,tags),display_fields=if(display_fields="",display_fields_settings,display_fields) \
\
| fillnull value="" tags, category, subcategory \
| eval tags=if(tags=="","[Untagged]",tags) \
| makemv delim=" " tags
iseval = 0
